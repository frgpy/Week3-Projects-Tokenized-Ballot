// This file was autogenerated by hardhat-viem, do not edit it.
// prettier-ignore
// tslint:disable
// eslint-disable

import type { Address } from "viem";
import type { AbiParameterToPrimitiveType, GetContractReturnType } from "@nomicfoundation/hardhat-viem/types";
import "@nomicfoundation/hardhat-viem/types";

export interface Ballot$Type {
  "_format": "hh-sol-artifact-1",
  "contractName": "Ballot",
  "sourceName": "contracts/TokenizedBallot.sol",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "bytes32[]",
          "name": "proposalNames",
          "type": "bytes32[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "proposals",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "name",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "voteCount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposal",
          "type": "uint256"
        }
      ],
      "name": "vote",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "winnerName",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "winnerName_",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "winningProposal",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "winningProposal_",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": "0x608060405234801561001057600080fd5b5060405161060738038061060783398181016040528101906100329190610266565b60005b81518110156100bc576000604051806040016040528084848151811061005e5761005d6102af565b5b6020026020010151815260200160008152509080600181540180825580915050600190039060005260206000209060020201600090919091909150600082015181600001556020820151816001015550508080600101915050610035565b50506102de565b6000604051905090565b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610125826100dc565b810181811067ffffffffffffffff82111715610144576101436100ed565b5b80604052505050565b60006101576100c3565b9050610163828261011c565b919050565b600067ffffffffffffffff821115610183576101826100ed565b5b602082029050602081019050919050565b600080fd5b6000819050919050565b6101ac81610199565b81146101b757600080fd5b50565b6000815190506101c9816101a3565b92915050565b60006101e26101dd84610168565b61014d565b9050808382526020820190506020840283018581111561020557610204610194565b5b835b8181101561022e578061021a88826101ba565b845260208401935050602081019050610207565b5050509392505050565b600082601f83011261024d5761024c6100d7565b5b815161025d8482602086016101cf565b91505092915050565b60006020828403121561027c5761027b6100cd565b5b600082015167ffffffffffffffff81111561029a576102996100d2565b5b6102a684828501610238565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61031a806102ed6000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80630121b93f14610051578063013cf08b1461006d578063609ff1bd1461009e578063e2ba53f0146100bc575b600080fd5b61006b60048036038101906100669190610201565b6100da565b005b61008760048036038101906100829190610201565b6100dd565b604051610095929190610256565b60405180910390f35b6100a6610111565b6040516100b3919061027f565b60405180910390f35b6100c4610193565b6040516100d1919061029a565b60405180910390f35b50565b600081815481106100ed57600080fd5b90600052602060002090600202016000915090508060000154908060010154905082565b6000806000905060005b60008054905081101561018e57816000828154811061013d5761013c6102b5565b5b90600052602060002090600202016001015411156101815760008181548110610169576101686102b5565b5b90600052602060002090600202016001015491508092505b808060010191505061011b565b505090565b60008061019e610111565b815481106101af576101ae6102b5565b5b906000526020600020906002020160000154905090565b600080fd5b6000819050919050565b6101de816101cb565b81146101e957600080fd5b50565b6000813590506101fb816101d5565b92915050565b600060208284031215610217576102166101c6565b5b6000610225848285016101ec565b91505092915050565b6000819050919050565b6102418161022e565b82525050565b610250816101cb565b82525050565b600060408201905061026b6000830185610238565b6102786020830184610247565b9392505050565b60006020820190506102946000830184610247565b92915050565b60006020820190506102af6000830184610238565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fdfea2646970667358221220e1e3216166dc35e8ef2785d01d1a16792413eb2ff8dcefe777dd1ad809a9d2e564736f6c63430008180033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061004c5760003560e01c80630121b93f14610051578063013cf08b1461006d578063609ff1bd1461009e578063e2ba53f0146100bc575b600080fd5b61006b60048036038101906100669190610201565b6100da565b005b61008760048036038101906100829190610201565b6100dd565b604051610095929190610256565b60405180910390f35b6100a6610111565b6040516100b3919061027f565b60405180910390f35b6100c4610193565b6040516100d1919061029a565b60405180910390f35b50565b600081815481106100ed57600080fd5b90600052602060002090600202016000915090508060000154908060010154905082565b6000806000905060005b60008054905081101561018e57816000828154811061013d5761013c6102b5565b5b90600052602060002090600202016001015411156101815760008181548110610169576101686102b5565b5b90600052602060002090600202016001015491508092505b808060010191505061011b565b505090565b60008061019e610111565b815481106101af576101ae6102b5565b5b906000526020600020906002020160000154905090565b600080fd5b6000819050919050565b6101de816101cb565b81146101e957600080fd5b50565b6000813590506101fb816101d5565b92915050565b600060208284031215610217576102166101c6565b5b6000610225848285016101ec565b91505092915050565b6000819050919050565b6102418161022e565b82525050565b610250816101cb565b82525050565b600060408201905061026b6000830185610238565b6102786020830184610247565b9392505050565b60006020820190506102946000830184610247565b92915050565b60006020820190506102af6000830184610238565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fdfea2646970667358221220e1e3216166dc35e8ef2785d01d1a16792413eb2ff8dcefe777dd1ad809a9d2e564736f6c63430008180033",
  "linkReferences": {},
  "deployedLinkReferences": {}
}

declare module "@nomicfoundation/hardhat-viem/types" {
  export function deployContract(
    contractName: "Ballot",
    constructorArgs: [proposalNames: AbiParameterToPrimitiveType<{"name":"proposalNames","type":"bytes32[]"}>],
    config?: DeployContractConfig
  ): Promise<GetContractReturnType<Ballot$Type["abi"]>>;
  export function deployContract(
    contractName: "contracts/TokenizedBallot.sol:Ballot",
    constructorArgs: [proposalNames: AbiParameterToPrimitiveType<{"name":"proposalNames","type":"bytes32[]"}>],
    config?: DeployContractConfig
  ): Promise<GetContractReturnType<Ballot$Type["abi"]>>;

  export function sendDeploymentTransaction(
    contractName: "Ballot",
    constructorArgs: [proposalNames: AbiParameterToPrimitiveType<{"name":"proposalNames","type":"bytes32[]"}>],
    config?: SendDeploymentTransactionConfig
  ): Promise<{
    contract: GetContractReturnType<Ballot$Type["abi"]>;
    deploymentTransaction: GetTransactionReturnType;
  }>;
  export function sendDeploymentTransaction(
    contractName: "contracts/TokenizedBallot.sol:Ballot",
    constructorArgs: [proposalNames: AbiParameterToPrimitiveType<{"name":"proposalNames","type":"bytes32[]"}>],
    config?: SendDeploymentTransactionConfig
  ): Promise<{
    contract: GetContractReturnType<Ballot$Type["abi"]>;
    deploymentTransaction: GetTransactionReturnType;
  }>;

  export function getContractAt(
    contractName: "Ballot",
    address: Address,
    config?: GetContractAtConfig
  ): Promise<GetContractReturnType<Ballot$Type["abi"]>>;
  export function getContractAt(
    contractName: "contracts/TokenizedBallot.sol:Ballot",
    address: Address,
    config?: GetContractAtConfig
  ): Promise<GetContractReturnType<Ballot$Type["abi"]>>;
}
